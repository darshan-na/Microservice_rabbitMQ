version: '3'

services:
  postgres:
    image: postgres
    networks:
      - app_network
    environment:
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - db:/data/postgres   

  producer:
    build:
      context: ./producer
    networks:
      - app_network
    
    environment:
      - RabbitMQ_host = "rabbitmq"
      - RabbitMQ_username = "user"
      - RabbitMQ_password = "password"

    ports:
      - "5000:5000"
    # restart: on-failure
networks:
  app_network:
    external:
      name: rabbitmq_network
volumes:
  db:
  # consumer_one:
  #   build: 
  #     context: ./consumer_one
  #   networks:
  #     - app_network
  #   depends_on:
  #     - postgres
  #   environment:
  #     - RabbitMQ_host = "rabbitmq"
  #     - RabbitMQ_username = "user"
  #     - RabbitMQ_password = "password"
  #   # restart: on-failure

  # consumer_two:
  #   build: 
  #     context: ./consumer_two
  #   networks:
  #     - app_network
  #   depends_on:
  #     - postgres
  #   environment:
  #     - RabbitMQ_host= "rabbitmq"
  #     - Postgres_host= "postgres"
  #     - RabbitMQ_username = "user"
  #     - RabbitMQ_password = "password"
  #   # restart: on-failure

  # consumer_three:
  #   build: 
  #     context: ./consumer_three
  #   networks:
  #     - app_network
  #   depends_on:
  #     - postgres
  #   environment:
  #     - RabbitMQ_host= "rabbitmq"
  #     - Postgres_host= "postgres"
  #     - RabbitMQ_username = "user"
  #     - RabbitMQ_password = "password"
  #   # restart: on-failure

  # consumer_four:
  #   build: 
  #     context: ./consumer_four
  #   networks:
  #     - app_network
  #   depends_on:
  #     - postgres
  #   environment:
  #     - RabbitMQ_host= "rabbitmq"
  #     - Postgres_host= "postgres"
  #     - RabbitMQ_username = "user"
  #     - RabbitMQ_password = "password"
  #   # restart: on-failure

